class_name: Sequential
config:
- class_name: InputLayer
  config:
    batch_input_shape: !!python/tuple [null, 5, 1, 48, 48]
    input_dtype: float32
    name: input_1
    sparse: false
- class_name: TimeDistributed
  config:
    layer:
      class_name: Convolution2D
      config:
        W_constraint: null
        W_regularizer: null
        activation: relu
        activity_regularizer: null
        b_constraint: null
        b_regularizer: null
        bias: true
        border_mode: same
        dim_ordering: tf
        init: glorot_uniform
        name: convolution2d_1
        nb_col: 4
        nb_filter: 16
        nb_row: 4
        subsample: !!python/tuple [2, 2]
        trainable: true
    name: timedistributed_1
    trainable: true
- class_name: TimeDistributed
  config:
    layer:
      class_name: Convolution2D
      config:
        W_constraint: null
        W_regularizer: null
        activation: relu
        activity_regularizer: null
        b_constraint: null
        b_regularizer: null
        bias: true
        border_mode: same
        dim_ordering: tf
        init: glorot_uniform
        name: convolution2d_2
        nb_col: 2
        nb_filter: 32
        nb_row: 2
        subsample: !!python/tuple [1, 1]
        trainable: true
    name: timedistributed_2
    trainable: true
- class_name: TimeDistributed
  config:
    layer:
      class_name: Convolution2D
      config:
        W_constraint: null
        W_regularizer: null
        activation: relu
        activity_regularizer: null
        b_constraint: null
        b_regularizer: null
        bias: true
        border_mode: same
        dim_ordering: tf
        init: glorot_uniform
        name: convolution2d_3
        nb_col: 2
        nb_filter: 32
        nb_row: 2
        subsample: !!python/tuple [1, 1]
        trainable: true
    name: timedistributed_3
    trainable: true
- class_name: TimeDistributed
  config:
    layer:
      class_name: Flatten
      config: {name: flatten_1, trainable: true}
    name: timedistributed_4
    trainable: true
- class_name: LSTM
  config:
    U_regularizer: null
    W_regularizer: null
    activation: relu
    b_regularizer: null
    consume_less: cpu
    dropout_U: 0.0
    dropout_W: 0.0
    forget_bias_init: one
    go_backwards: false
    init: glorot_uniform
    inner_activation: hard_sigmoid
    inner_init: orthogonal
    input_dim: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [i8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAMAAAAAAAA=
    input_length: null
    name: lstm_1
    output_dim: 256
    return_sequences: false
    stateful: false
    trainable: true
    unroll: false
- class_name: Dense
  config: {W_constraint: null, W_regularizer: null, activation: linear, activity_regularizer: null,
    b_constraint: null, b_regularizer: null, bias: true, init: glorot_uniform, input_dim: 256,
    name: dense_1, output_dim: 2, trainable: true}
keras_version: 1.2.1
